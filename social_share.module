<?php

/**
 * @file
 * Implements configurable social network share links to nodes
 */

/**
 * Implementation of hook_menu().
 */
function social_share_menu() {
  $items = array();
  $items['admin/settings/social-share'] = array(
    'title'            => t('Social Share'),
    'description'      => t('Configure share link styling.'),
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('social_share_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type'             => MENU_NORMAL_ITEM,
    'file'             => 'social_share.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function social_share_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'view':
      // these three lines check to see if we can display the share box
      if (($teaser && variable_get('social_share_teaser', 1) == 1) || (!$teaser)) {
        $enabledTypes = variable_get('social_share_node_types', array());
        if ($enabledTypes[$node->type]) {
          $share_box = '<div class="social-share-container">Share: ';

          // get a list of enabled share links and generate them individually
          $sites = variable_get('social_share_sites', array());
          foreach($sites as $site => $enabled) {
            if ($enabled) {
              $share_box .= theme('social_share', $site, $node);
            }
            $share_box .= '</div>';
          }

          // put the shareBox into the node before it's rendered
          $node->content['social_share'] = array(
            '#value' => $share_box,
            '#weight' => variable_get('social_share_weight', 0)
          );
	}
      }
      break;
  }
}

/*
* Implementation of hook_theme()
*/
function social_share_theme() {
  return array(
    'social_share' => array(
      'arguments' => array('site', 'node')
    ),
  );
}


/*
* Render an individual share link
*/
function theme_social_share($site, $node){
  global $base_url;

  // define the share links
  $sites['facebook']   = array('name' => 'Facebook', 'url' => 'http://facebook.com/sharer.php?u=%URL%&t=%TITLE%');
  $sites['twitter']    = array('name' => 'Twitter', 'url' => 'http://twitter.com/home?status=%TITLE%+%URL%');
  $sites['googlebuzz'] = array('name' => 'Google Buzz', 'url' => 'http://www.google.com/buzz/post?url=%URL%&message=%TITLE%');
  $sites['myspace']    = array('name' => 'Myspace', 'url' => 'http://www.myspace.com/Modules/PostTo/Pages/default.aspx?u=%URL%&c=%TITLE%');
  $sites['msnlive']    = array('name' => 'MSN Live', 'url' => 'http://profile.live.com/badge/?url=%URL%&title=%TITLE%&description=%DESC%');
  $sites['yahoo']      = array('name' => 'Yahoo', 'url' => 'http://bookmarks.yahoo.com/toolbar/savebm?opener=tb&u=%URL%&t=%TITLE%&d=%DESC%');
  $sites['linkedin']   = array('name' => 'LinkedIn', 'url' => 'http://www.linkedin.com/shareArticle?url=%URL%&mini=true&title=%TITLE%&ro=false&summary=%DESC%&source=');
  $sites['orkut']      = array('name' => 'Orkut', 'url' => 'http://promote.orkut.com/preview?nt=orkut.com&tt=%TITLE%&du=%URL%&cn=%DESC%');

  // check for an alias on the node
  $row = db_query("SELECT dst FROM {url_alias} WHERE src = 'node/%d'", $node->nid);
  $alias = db_result($row);
  $url = $base_url .'/'. ($alias ? $alias : 'node/'. $node->nid);

  // switch out placeholders with node informaiton
  $maxDescLength = variable_get('social_share_max_desc_length', 50);
  $target = variable_get('social_share_target', 0);

  $placeholders = array(
    '%TITLE%',
    '%URL%',
    '%DESC%'
  );


  // @TODO
  // Ensure title & url passed to twitter do not exceed twitter limits of 140chars
  // Possibly utilize url shortener if available.

  $replacements = array(
    urlencode($node->title),
    $url,
    urlencode(strip_tags(strlen($node->body) > $maxDescLength ? substr($node->body, 0, $maxDescLength) .'...' : $node->body))
  );
	
  $link = '<a class="social-share-'. $site .'" href="'. str_replace($placeholders, $replacements, $sites[$site]['url']) .'">'. $sites[$site]['name'] .'</a> ';

  // Return the link
  return $link;
}
